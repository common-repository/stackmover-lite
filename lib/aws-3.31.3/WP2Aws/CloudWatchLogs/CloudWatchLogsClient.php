<?php
namespace WP2Aws\CloudWatchLogs;

use WP2Aws\WP2AwsClient;

/**
 * This client is used to interact with the **Amazon CloudWatch Logs** service.
 *
 * @method \WP2Aws\Result cancelExportTask(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise cancelExportTaskAsync(array $args = [])
 * @method \WP2Aws\Result createExportTask(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise createExportTaskAsync(array $args = [])
 * @method \WP2Aws\Result createLogGroup(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise createLogGroupAsync(array $args = [])
 * @method \WP2Aws\Result createLogStream(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise createLogStreamAsync(array $args = [])
 * @method \WP2Aws\Result deleteDestination(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteDestinationAsync(array $args = [])
 * @method \WP2Aws\Result deleteLogGroup(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteLogGroupAsync(array $args = [])
 * @method \WP2Aws\Result deleteLogStream(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteLogStreamAsync(array $args = [])
 * @method \WP2Aws\Result deleteMetricFilter(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteMetricFilterAsync(array $args = [])
 * @method \WP2Aws\Result deleteRetentionPolicy(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteRetentionPolicyAsync(array $args = [])
 * @method \WP2Aws\Result deleteSubscriptionFilter(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise deleteSubscriptionFilterAsync(array $args = [])
 * @method \WP2Aws\Result describeDestinations(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeDestinationsAsync(array $args = [])
 * @method \WP2Aws\Result describeExportTasks(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeExportTasksAsync(array $args = [])
 * @method \WP2Aws\Result describeLogGroups(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeLogGroupsAsync(array $args = [])
 * @method \WP2Aws\Result describeLogStreams(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeLogStreamsAsync(array $args = [])
 * @method \WP2Aws\Result describeMetricFilters(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeMetricFiltersAsync(array $args = [])
 * @method \WP2Aws\Result describeSubscriptionFilters(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise describeSubscriptionFiltersAsync(array $args = [])
 * @method \WP2Aws\Result filterLogEvents(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise filterLogEventsAsync(array $args = [])
 * @method \WP2Aws\Result getLogEvents(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise getLogEventsAsync(array $args = [])
 * @method \WP2Aws\Result listTagsLogGroup(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise listTagsLogGroupAsync(array $args = [])
 * @method \WP2Aws\Result putDestination(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putDestinationAsync(array $args = [])
 * @method \WP2Aws\Result putDestinationPolicy(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putDestinationPolicyAsync(array $args = [])
 * @method \WP2Aws\Result putLogEvents(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putLogEventsAsync(array $args = [])
 * @method \WP2Aws\Result putMetricFilter(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putMetricFilterAsync(array $args = [])
 * @method \WP2Aws\Result putRetentionPolicy(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putRetentionPolicyAsync(array $args = [])
 * @method \WP2Aws\Result putSubscriptionFilter(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise putSubscriptionFilterAsync(array $args = [])
 * @method \WP2Aws\Result tagLogGroup(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise tagLogGroupAsync(array $args = [])
 * @method \WP2Aws\Result testMetricFilter(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise testMetricFilterAsync(array $args = [])
 * @method \WP2Aws\Result untagLogGroup(array $args = [])
 * @method \WP2GuzzleHttp\Promise\Promise untagLogGroupAsync(array $args = [])
 */
class CloudWatchLogsClient extends WP2AwsClient {}
